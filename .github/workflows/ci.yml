name: Integration tests
on: 
  push:
    branches:
      - 'main'
      - 'release-*'
  pull_request:
    branches:
      - 'main'

env:
  # Golang version to use across CI steps
  GOLANG_VERSION: '1.16.5'
  KUBECTL_VERSION: 'v1.21.4'

jobs:

  lint-go:
    name: Lint Go code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-go-installation: true
          version: v1.43.0
          args: --timeout 10m


  run-unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: [lint-go]
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Test
        run: go test -v ./...

  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: [run-unit-tests]
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/node-refiner:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

          
  run-integration-tests:
    name: Run Integration Tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/${{ env.KUBECTL_VERSION }}/bin/linux/amd64/kubectl" && \
          chmod +x kubectl && \
          mv kubectl /usr/local/bin/ \
          && echo "kubectl installed"
      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-linux-amd64 && chmod +x ./kind && sudo mv ./kind /usr/local/bin/kind
      - name: Install krew & KUTTL
        run: |
          set -x; cd "$(mktemp -d)" && \
          OS="$(uname | tr '[:upper:]' '[:lower:]')" && \
          ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" && \
          KREW="krew-${OS}_${ARCH}" && \
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" && \
          tar zxvf "${KREW}.tar.gz" && \
          ./"${KREW}" install krew && \
          export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH" >> ~/.bashrc && \
          source ~/.bashrc && \
          kubectl krew install kuttl && \
          cd /home/runner/work/node-refiner/node-refiner && \
          kubectl kuttl test --start-kind --artifacts-dir ${{ github.workspace }}/tests/artifacts
        shell: bash
      - name: Archive KUTTL Kind Logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: KUTTL-Results
          path: ${{ github.workspace }}/tests/artifacts/kind**
